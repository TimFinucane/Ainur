<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>138</x>
      <y>54</y>
      <w>150</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>*common::Schedule*
--
-processors : List&lt;Processor&gt;
--
+getProcessors() : List&lt;Processor&gt;
--
Responsibilities
-- Contains a list of processors which
in turn contain ordered tasks.
-- A task referencing a node may only 
exist once in the schedule
-- An occurance of this class outside
the algorithm class must be complete.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>54</y>
      <w>150</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>*common::Processor*
--
-tasks : List&lt;Task&gt;
--
+getTasks() : List&lt;Task&gt;
+addTask(task : Task) : void
+removeTask(task : Task) : void
+removeTask(taskIndex : int) : void

+containsTask(task : Task) : bool
--
Responsibilities
-- Holds a list of Tasks in sequence.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>522</x>
      <y>54</y>
      <w>150</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>*common::Task*
--
-startTime : int {final}
-node : Node {final}
--
+getStartTime() : int
+getNode() : Node
--
Responsibilities
-- A task will be given a start time 
on construction as well as a Node
object to represent graphical data.
-- A task referencing a node may only 
exist once in the schedule</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>522</x>
      <y>216</y>
      <w>150</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>*common::Node*
--
-incomingEdges : List&lt;Edge&gt;
-outgoingEdges : List&lt;Edge&gt;
--
+getIncomingEdges() : List&lt;Edge&gt;
+getOutgoingEdges() : List&lt;Edge&gt;

+isTerminal() : bool
--
Responsibilities
-- Contains ingoing and outgoing edges
of node of a tree.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>216</y>
      <w>150</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>*common::Edge*
--
-to : Node {final}
-from : Node {final}
-cost : int {final}
--
+getNodeTo() : Node
+getNodeFrom() : Node
+getCost() : int
--
Responsibilities
-- Composed of source node,
destination node and edge cost.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>186</x>
      <y>282</y>
      <w>84</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>How we avoid the 
circular dependency:
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>474</x>
      <y>264</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>588</x>
      <y>168</y>
      <w>18</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>474</x>
      <y>108</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>282</x>
      <y>108</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>426</x>
      <y>414</y>
      <w>150</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*common::Graph*
--
-nodes : List&lt;Node&gt;
-edges : List&lt;Edge&gt;
--
+getEntryPoints() : List&lt;Node&gt;
--
Responsibilities
-- Holds reference to all nodes and
edges in a graph.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>324</y>
      <w>18</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;150.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>546</x>
      <y>324</y>
      <w>18</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;150.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
